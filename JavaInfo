#!/usr/bin/perl

# JavaInfo - Perl utility to extract the java version info from a class file's bytecode.
# Copyright (C) 2016 Thomas Leplus
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

use strict;
use warnings;
use File::Spec::Functions;

sub main(@) {
    foreach my $node (@_) {
	process_node($node);
    }
}

sub process_node($) {
    my $node = shift();
    if (-f $node) {
	process_file($node);
    } elsif (-d $node) {
	process_dir($node);
    }
}

sub process_dir($) {
    my $dir = shift();
    if (opendir(DIR, $dir)) {
	if (my @nodes = readdir(DIR)) {
	    foreach my $node (no_upwards(@nodes)) {
		process_node(catfile($dir, $node));
	    }
	} else {
	    die "$dir: could not read directory ($!)\n";
	}
	closedir(DIR);
    } else {
	die "$dir: could not open directory ($!)\n";
    }
}

sub process_file($) {
    my $file = shift();
    if (open(FILE, $file)) {
	binmode(FILE);
	my $buffer;
	if (read(FILE, $buffer, 8)) {
	    my @fields = unpack('NN', $buffer);
	    if ($fields[0] == 0xCAFEBABE) {
		my $minor = ($fields[1] & 0xFF00) >> 16;
		my $major = $fields[1] & 0x00FF;
		my $version = '';
		if ($major == 45) {
		    if ($minor <= 3) {
			$version = '1.0.2';
		    } else {
			$version = '1.1.8';
		    }
		} elsif ($major == 46) {
		    $version = '1.2.2';
		} elsif ($major == 47) {
		    $version = '1.3.1';
		} elsif ($major == 48) {
		    $version = '1.4.2';
		} elsif ($major >= 49) {
		    $version = ($major - 44);
		}
		print "$file: Java " . $version . " [" . $minor . "/" . $major . "]\n";
	    } else {
		die "$file: not a java class file\n";
	    }
	} else {
	    die "$file: could not read file ($!)\n";
	}
	close(FILE);
    } else {
	die "$file: could not open file ($!)\n";
    }
}

main(@ARGV);
